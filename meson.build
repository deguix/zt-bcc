project('bcc', 'c')

src = [
    'src/gbuf.c',
    'src/main.c',
    'src/cache/cache.c',
    'src/cache/archive.c',
    'src/cache/field.c',
    'src/cache/library.c',
    'src/common.c',
    'src/parse/dec.c',
    'src/parse/stmt.c',
    'src/parse/expr.c',
    'src/parse/asm.c',
    'src/parse/phase.c',
    'src/parse/token/queue.c',
    'src/parse/token/source.c',
    'src/parse/token/stream.c',
    'src/parse/token/info.c',
    'src/parse/token/expr.c',
    'src/parse/token/output.c',
    'src/parse/token/dirc.c',
    'src/parse/token/user.c',
    'src/parse/library.c',
    'src/version.c',
    'src/semantic/dec.c',
    'src/semantic/type.c',
    'src/semantic/stmt.c',
    'src/semantic/expr.c',
    'src/semantic/asm.c',
    'src/semantic/phase.c',
    'src/codegen/dec.c',
    'src/codegen/obj.c',
    'src/codegen/stmt.c',
    'src/codegen/expr.c',
    'src/codegen/asm.c',
    'src/codegen/pcode.c',
    'src/codegen/phase.c',
    'src/codegen/linear.c',
    'src/codegen/chunk.c',
    'src/task.c',
    'src/builtin.c'
]

tests = [
    'test/jm.bcs',
    'test/list.bcs',
    'test/parse_fixed.bcs',
    'test/bigint.bcs',
    'test/jm_header/telepatch.bcs',
    'test/jm_header/svmz.bcs',
    'test/jm_header/jm.bcs',
    'test/jm_header/solo_ranker.bcs',
    'test/jm_header/team_ranker.h.bcs',
    'test/jm_header/luk.h.bcs',
    'test/jm_header/utility.bcs',
    'test/jm_header/rsd.bcs',
    'test/jm_header/utility.h.bcs',
    'test/jm_header/who_exited.bcs',
    'test/jm_header/timer.bcs',
    'test/jm_header/luk.bcs',
    'test/jm_header/telepatch.h.bcs',
    'test/jm_header/who_exited.h.bcs',
    'test/jm_header/auto_fist.h.bcs',
    'test/jm_header/map_message.bcs',
    'test/jm_header/solo_ranker.h.bcs',
    'test/jm_header/jm.h.bcs',
    'test/jm_header/config.h.bcs',
    'test/jm_header/map_message.h.bcs',
    'test/jm_header/svmz.h.bcs',
    'test/jm_header/auto_fist.bcs',
    'test/jm_header/rsd.h.bcs',
    'test/jm_header/client.bcs',
    'test/jm_header/team_ranker.bcs',
    'test/jm_header/client.h.bcs',
    'test/jm_header/timer.h.bcs',
    'test/jm_header/hs.h.bcs',
    'test/jm_header/hs.bcs',
    'test/stack.bcs',
    'test/sorting.bcs',
    'test/functions.bcs'
]

bcc = executable('bcc', sources: src)

# Test BCS compilation
foreach t : tests
    test('[BCS compilation] @0@'.format(t), bcc, args: ['-x', 'bcs', '-acc-stats', '-I', 'tests', t])
endforeach
